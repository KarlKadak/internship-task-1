memberSearchIndex = [{"p":"dev.karlkadak.backend.dto","c":"AddCityRequest","l":"AddCityRequest()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend.dto","c":"WeatherResponse","l":"airTemp"},{"p":"dev.karlkadak.backend.entity","c":"WeatherData","l":"airTemperature"},{"p":"dev.karlkadak.backend.controller","c":"CityController","l":"all()"},{"p":"dev.karlkadak.backend.service","c":"CityManager","l":"apiKey"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporter","l":"apiKey"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"apiPrefix"},{"p":"dev.karlkadak.backend.config","c":"AppConfig","l":"AppConfig()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend","c":"BackendApplication","l":"BackendApplication()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend","c":"BackendApplicationTests","l":"BackendApplicationTests()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend.entity","c":"WeatherData","l":"city"},{"p":"dev.karlkadak.backend.entity","c":"City","l":"City(String, Double, Double, String)","u":"%3Cinit%3E(java.lang.String,java.lang.Double,java.lang.Double,java.lang.String)"},{"p":"dev.karlkadak.backend.exception","c":"CityAlreadyBeingTrackedException","l":"CityAlreadyBeingTrackedException()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend.exception","c":"CityAlreadyNotBeingTrackedException","l":"CityAlreadyNotBeingTrackedException()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend.controller","c":"CityController","l":"CityController(CityRepository, CityManager, WeatherDataRepository)","u":"%3Cinit%3E(dev.karlkadak.backend.repository.CityRepository,dev.karlkadak.backend.service.CityManager,dev.karlkadak.backend.repository.WeatherDataRepository)"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"CityControllerTest()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend.controller","c":"CityController","l":"cityManager"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"cityManager"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"cityManager"},{"p":"dev.karlkadak.backend.service","c":"CityManager","l":"CityManager(CityRepository, Logger, RestTemplate, ObjectMapper, WeatherDataImporter)","u":"%3Cinit%3E(dev.karlkadak.backend.repository.CityRepository,java.util.logging.Logger,org.springframework.web.client.RestTemplate,com.fasterxml.jackson.databind.ObjectMapper,dev.karlkadak.backend.service.WeatherDataImporter)"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"CityManagerTest()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend.exception","c":"CityNotFoundException","l":"CityNotFoundException()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend.exception","c":"CityNotFoundException","l":"CityNotFoundException(long)","u":"%3Cinit%3E(long)"},{"p":"dev.karlkadak.backend.controller","c":"CityController","l":"cityRepository"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"cityRepository"},{"p":"dev.karlkadak.backend.service","c":"CityManager","l":"cityRepository"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"cityRepository"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporter","l":"cityRepository"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporterTest","l":"cityRepository"},{"p":"dev.karlkadak.backend.dto","c":"CityResponse","l":"CityResponse(City)","u":"%3Cinit%3E(dev.karlkadak.backend.entity.City)"},{"p":"dev.karlkadak.backend","c":"BackendApplicationTests","l":"contextLoads()"},{"p":"dev.karlkadak.backend.entity","c":"City","l":"coordinatePair"},{"p":"dev.karlkadak.backend.entity","c":"CoordinatePair","l":"CoordinatePair()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend.config","c":"WebConfig","l":"corsConfigurer()"},{"p":"dev.karlkadak.backend.entity","c":"City","l":"countryCode"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporter","l":"defaultImport()"},{"p":"dev.karlkadak.backend.controller","c":"CityController","l":"disable(Long)","u":"disable(java.lang.Long)"},{"p":"dev.karlkadak.backend.service","c":"CityManager","l":"disableImporting(long)"},{"p":"dev.karlkadak.backend.controller","c":"CityController","l":"enable(AddCityRequest)","u":"enable(dev.karlkadak.backend.dto.AddCityRequest)"},{"p":"dev.karlkadak.backend.service","c":"CityManager","l":"enableImporting(String)","u":"enableImporting(java.lang.String)"},{"p":"dev.karlkadak.backend.dto","c":"ErrorResponse","l":"ErrorResponse()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend.exception","c":"FailedCityDataImportException","l":"FailedCityDataImportException()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend.exception","c":"FailedWeatherDataFetchException","l":"FailedWeatherDataFetchException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporter","l":"fetchAndSave(City)","u":"fetchAndSave(dev.karlkadak.backend.entity.City)"},{"p":"dev.karlkadak.backend.repository","c":"CityRepository","l":"findAllByImportingDataTrue()"},{"p":"dev.karlkadak.backend.repository","c":"CityRepository","l":"findByName(String)","u":"findByName(java.lang.String)"},{"p":"dev.karlkadak.backend.repository","c":"WeatherDataRepository","l":"findTopByCity_IdOrderByTimestampDesc(Long)","u":"findTopByCity_IdOrderByTimestampDesc(java.lang.Long)"},{"p":"dev.karlkadak.backend.dto","c":"CityResponse","l":"flagHref"},{"p":"dev.karlkadak.backend.exception","c":"GlobalExceptionHandler","l":"GlobalExceptionHandler()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend.exception","c":"GlobalExceptionHandler","l":"handleCityAlreadyBeingTrackedException(CityAlreadyBeingTrackedException)","u":"handleCityAlreadyBeingTrackedException(dev.karlkadak.backend.exception.CityAlreadyBeingTrackedException)"},{"p":"dev.karlkadak.backend.exception","c":"GlobalExceptionHandler","l":"handleCityAlreadyNotBeingTrackedException(CityAlreadyNotBeingTrackedException)","u":"handleCityAlreadyNotBeingTrackedException(dev.karlkadak.backend.exception.CityAlreadyNotBeingTrackedException)"},{"p":"dev.karlkadak.backend.exception","c":"GlobalExceptionHandler","l":"handleCityNotFoundException(CityNotFoundException)","u":"handleCityNotFoundException(dev.karlkadak.backend.exception.CityNotFoundException)"},{"p":"dev.karlkadak.backend.exception","c":"GlobalExceptionHandler","l":"handleFailedCityDataImportException(FailedCityDataImportException)","u":"handleFailedCityDataImportException(dev.karlkadak.backend.exception.FailedCityDataImportException)"},{"p":"dev.karlkadak.backend.exception","c":"GlobalExceptionHandler","l":"handleMalformedCityNameException(MalformedCityNameException)","u":"handleMalformedCityNameException(dev.karlkadak.backend.exception.MalformedCityNameException)"},{"p":"dev.karlkadak.backend.exception","c":"GlobalExceptionHandler","l":"handleWeatherDataMissingException(WeatherDataMissingException)","u":"handleWeatherDataMissingException(dev.karlkadak.backend.exception.WeatherDataMissingException)"},{"p":"dev.karlkadak.backend.dto","c":"WeatherResponse","l":"humidity"},{"p":"dev.karlkadak.backend.entity","c":"WeatherData","l":"humidity"},{"p":"dev.karlkadak.backend.entity","c":"WeatherData","l":"iconCode"},{"p":"dev.karlkadak.backend.dto","c":"WeatherResponse","l":"iconHref"},{"p":"dev.karlkadak.backend.dto","c":"CityResponse","l":"id"},{"p":"dev.karlkadak.backend.entity","c":"City","l":"id"},{"p":"dev.karlkadak.backend.entity","c":"WeatherData","l":"id"},{"p":"dev.karlkadak.backend.cron","c":"WeatherDataImportScheduler","l":"importerCronExpression"},{"p":"dev.karlkadak.backend.entity","c":"City","l":"importingData"},{"p":"dev.karlkadak.backend","c":"BackendApplication","l":"initializeWeatherDataImport(WeatherDataImportScheduler)","u":"initializeWeatherDataImport(dev.karlkadak.backend.cron.WeatherDataImportScheduler)"},{"p":"dev.karlkadak.backend.dto","c":"CityResponse","l":"latitude"},{"p":"dev.karlkadak.backend.entity","c":"CoordinatePair","l":"latitude"},{"p":"dev.karlkadak.backend.cron","c":"WeatherDataImportScheduler","l":"logger"},{"p":"dev.karlkadak.backend.cron","c":"WeatherDataImportSchedulerTest","l":"logger"},{"p":"dev.karlkadak.backend.service","c":"CityManager","l":"logger"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"logger"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporter","l":"logger"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporterTest","l":"logger"},{"p":"dev.karlkadak.backend.config","c":"AppConfig","l":"logger()"},{"p":"dev.karlkadak.backend.dto","c":"CityResponse","l":"longitude"},{"p":"dev.karlkadak.backend.entity","c":"CoordinatePair","l":"longitude"},{"p":"dev.karlkadak.backend","c":"BackendApplication","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"dev.karlkadak.backend.exception","c":"MalformedCityNameException","l":"MalformedCityNameException()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend.dto","c":"ErrorResponse","l":"message"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"mockMvc"},{"p":"dev.karlkadak.backend.dto","c":"AddCityRequest","l":"name"},{"p":"dev.karlkadak.backend.dto","c":"CityResponse","l":"name"},{"p":"dev.karlkadak.backend.entity","c":"City","l":"name"},{"p":"dev.karlkadak.backend.service","c":"CityManager","l":"nameFormattedCorrectly(String)","u":"nameFormattedCorrectly(java.lang.String)"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"objectMapper"},{"p":"dev.karlkadak.backend.service","c":"CityManager","l":"objectMapper"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"objectMapper"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporter","l":"objectMapper"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporterTest","l":"objectMapper"},{"p":"dev.karlkadak.backend.config","c":"AppConfig","l":"objectMapper()"},{"p":"dev.karlkadak.backend.controller","c":"CityController","l":"one(Long)","u":"one(java.lang.Long)"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporter","l":"requestData(City)","u":"requestData(dev.karlkadak.backend.entity.City)"},{"p":"dev.karlkadak.backend.service","c":"CityManager","l":"restTemplate"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"restTemplate"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporter","l":"restTemplate"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporterTest","l":"restTemplate"},{"p":"dev.karlkadak.backend.config","c":"AppConfig","l":"restTemplate()"},{"p":"dev.karlkadak.backend.service","c":"CityManager","l":"retrieveCompleteCity(String)","u":"retrieveCompleteCity(java.lang.String)"},{"p":"dev.karlkadak.backend.cron","c":"WeatherDataImportScheduler","l":"scheduleImport()"},{"p":"dev.karlkadak.backend.cron","c":"WeatherDataImportSchedulerTest","l":"setUp()"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"setUp()"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporterTest","l":"setUp()"},{"p":"dev.karlkadak.backend.cron","c":"WeatherDataImportScheduler","l":"taskScheduler"},{"p":"dev.karlkadak.backend.cron","c":"WeatherDataImportSchedulerTest","l":"taskScheduler"},{"p":"dev.karlkadak.backend.config","c":"AppConfig","l":"taskScheduler()"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"testAll_WithCities()"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"testAll_WithoutCities()"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporterTest","l":"testDefaultImport_LogsError()"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporterTest","l":"testDefaultImport_NoCitiesToFetch()"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporterTest","l":"testDefaultImport_WithCitiesToFetch_WithAllData()"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporterTest","l":"testDefaultImport_WithCitiesToFetch_WithRequiredData()"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"testDisable_Failure()"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"testDisable_Success()"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"testDisableImporting_ExistingNotTrackedCity()"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"testDisableImporting_ExistingTrackedCity()"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"testDisableImporting_NotExistingCity()"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"testEnable_Failure()"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"testEnable_Success()"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"testEnableImporting_ExistingNotTrackedCity()"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"testEnableImporting_ExistingTrackedCity()"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"testEnableImporting_NewCity()"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"testOne_Failure()"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"testOne_Success()"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"testRetrieveCompleteCity_ExistingCity()"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"testRetrieveCompleteCity_FailedRequest()"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"testRetrieveCompleteCity_MalformedName()"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"testRetrieveCompleteCity_MalformedResponse()"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"testRetrieveCompleteCity_NewCity()"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"testRetrieveCompleteCity_NotExistingCity()"},{"p":"dev.karlkadak.backend.cron","c":"WeatherDataImportSchedulerTest","l":"testScheduleImport()"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"testWeather_Failure()"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"testWeather_Success()"},{"p":"dev.karlkadak.backend.dto","c":"WeatherResponse","l":"timestamp"},{"p":"dev.karlkadak.backend.entity","c":"WeatherData","l":"timestamp"},{"p":"dev.karlkadak.backend.controller","c":"CityController","l":"weather(Long)","u":"weather(java.lang.Long)"},{"p":"dev.karlkadak.backend.entity","c":"WeatherData","l":"WeatherData(City, long, Double, Double, Integer, String)","u":"%3Cinit%3E(dev.karlkadak.backend.entity.City,long,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.String)"},{"p":"dev.karlkadak.backend.cron","c":"WeatherDataImportScheduler","l":"weatherDataImporter"},{"p":"dev.karlkadak.backend.cron","c":"WeatherDataImportSchedulerTest","l":"weatherDataImporter"},{"p":"dev.karlkadak.backend.service","c":"CityManager","l":"weatherDataImporter"},{"p":"dev.karlkadak.backend.service","c":"CityManagerTest","l":"weatherDataImporter"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporterTest","l":"weatherDataImporter"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporter","l":"WeatherDataImporter(WeatherDataRepository, CityRepository, Logger, RestTemplate, ObjectMapper)","u":"%3Cinit%3E(dev.karlkadak.backend.repository.WeatherDataRepository,dev.karlkadak.backend.repository.CityRepository,java.util.logging.Logger,org.springframework.web.client.RestTemplate,com.fasterxml.jackson.databind.ObjectMapper)"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporterTest","l":"WeatherDataImporterTest()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend.cron","c":"WeatherDataImportSchedulerTest","l":"weatherDataImportScheduler"},{"p":"dev.karlkadak.backend.cron","c":"WeatherDataImportScheduler","l":"WeatherDataImportScheduler(ThreadPoolTaskScheduler, WeatherDataImporter, Logger)","u":"%3Cinit%3E(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler,dev.karlkadak.backend.service.WeatherDataImporter,java.util.logging.Logger)"},{"p":"dev.karlkadak.backend.cron","c":"WeatherDataImportSchedulerTest","l":"WeatherDataImportSchedulerTest()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend.exception","c":"WeatherDataMissingException","l":"WeatherDataMissingException()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend.controller","c":"CityController","l":"weatherDataRepository"},{"p":"dev.karlkadak.backend.controller","c":"CityControllerTest","l":"weatherDataRepository"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporter","l":"weatherDataRepository"},{"p":"dev.karlkadak.backend.service","c":"WeatherDataImporterTest","l":"weatherDataRepository"},{"p":"dev.karlkadak.backend.dto","c":"WeatherResponse","l":"WeatherResponse(WeatherData)","u":"%3Cinit%3E(dev.karlkadak.backend.entity.WeatherData)"},{"p":"dev.karlkadak.backend.config","c":"WebConfig","l":"WebConfig()","u":"%3Cinit%3E()"},{"p":"dev.karlkadak.backend.dto","c":"WeatherResponse","l":"windSpeed"},{"p":"dev.karlkadak.backend.entity","c":"WeatherData","l":"windSpeed"}];updateSearchResults();